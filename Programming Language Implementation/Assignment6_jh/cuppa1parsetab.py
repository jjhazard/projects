
# cuppa1parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftEQLEleftPLUSMINUSleftTIMESDIVIDErightUMINUSNOTDIVIDE ELSE EQ GET ID IF INTEGER LE MINUS NOT PLUS PUT TIMES WHILE\n    program : stmt_list\n    \n    stmt_list : stmt stmt_list\n              | empty\n    \n    stmt : ID '=' exp opt_semi\n         | GET ID opt_semi\n         | PUT exp opt_semi\n         | WHILE '(' exp ')' stmt\n         | IF '(' exp ')' stmt opt_else\n         | '{' stmt_list '}'\n    \n    opt_else : ELSE stmt\n             | empty\n    \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp TIMES exp\n        | exp DIVIDE exp\n        | exp EQ exp\n        | exp LE exp\n    \n    exp : INTEGER\n    \n    exp : ID\n    \n    exp : '(' exp ')'\n    \n    exp : MINUS exp %prec UMINUS\n    \n    exp : NOT exp\n    \n    opt_semi : ';'\n             | empty\n    \n    empty :\n    "
    
_lr_action_items = {'ID':([0,3,6,7,10,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[5,5,13,17,5,17,-25,-25,17,-18,-19,17,17,17,17,-25,-5,-23,-24,-6,17,17,17,17,17,17,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,5,5,-7,-25,-8,5,-11,-10,]),'GET':([0,3,10,13,14,16,17,23,24,25,26,27,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[6,6,6,-25,-25,-18,-19,-25,-5,-23,-24,-6,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,6,6,-7,-25,-8,6,-11,-10,]),'PUT':([0,3,10,13,14,16,17,23,24,25,26,27,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[7,7,7,-25,-25,-18,-19,-25,-5,-23,-24,-6,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,7,7,-7,-25,-8,7,-11,-10,]),'WHILE':([0,3,10,13,14,16,17,23,24,25,26,27,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[8,8,8,-25,-25,-18,-19,-25,-5,-23,-24,-6,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,8,8,-7,-25,-8,8,-11,-10,]),'IF':([0,3,10,13,14,16,17,23,24,25,26,27,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[9,9,9,-25,-25,-18,-19,-25,-5,-23,-24,-6,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,9,9,-7,-25,-8,9,-11,-10,]),'{':([0,3,10,13,14,16,17,23,24,25,26,27,34,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[10,10,10,-25,-25,-18,-19,-25,-5,-23,-24,-6,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,10,10,-7,-25,-8,10,-11,-10,]),'$end':([0,1,2,3,4,11,13,14,16,17,23,24,25,26,27,34,36,39,40,41,42,43,44,45,46,47,50,51,52,54,55,],[-25,0,-1,-25,-3,-2,-25,-25,-18,-19,-25,-5,-23,-24,-6,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,-7,-25,-8,-11,-10,]),'}':([3,4,10,11,13,14,16,17,22,23,24,25,26,27,34,36,39,40,41,42,43,44,45,46,47,50,51,52,54,55,],[-25,-3,-25,-2,-25,-25,-18,-19,39,-25,-5,-23,-24,-6,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,-7,-25,-8,-11,-10,]),'=':([5,],[12,]),'INTEGER':([7,12,15,18,19,20,21,28,29,30,31,32,33,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'(':([7,8,9,12,15,18,19,20,21,28,29,30,31,32,33,],[18,20,21,18,18,18,18,18,18,18,18,18,18,18,18,]),'MINUS':([7,12,14,15,16,17,18,19,20,21,23,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,],[15,15,29,15,-18,-19,15,15,15,15,29,15,15,15,15,15,15,-21,29,-22,29,29,-12,-13,-14,-15,29,29,-20,]),'NOT':([7,12,15,18,19,20,21,28,29,30,31,32,33,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),';':([13,14,16,17,23,34,36,41,42,43,44,45,46,47,],[25,25,-18,-19,25,-21,-22,-12,-13,-14,-15,-16,-17,-20,]),'ELSE':([13,14,16,17,23,24,25,26,27,34,36,39,40,41,42,43,44,45,46,47,50,51,52,54,55,],[-25,-25,-18,-19,-25,-5,-23,-24,-6,-21,-22,-9,-4,-12,-13,-14,-15,-16,-17,-20,-7,53,-8,-11,-10,]),'PLUS':([14,16,17,23,34,35,36,37,38,41,42,43,44,45,46,47,],[28,-18,-19,28,-21,28,-22,28,28,-12,-13,-14,-15,28,28,-20,]),'TIMES':([14,16,17,23,34,35,36,37,38,41,42,43,44,45,46,47,],[30,-18,-19,30,-21,30,-22,30,30,30,30,-14,-15,30,30,-20,]),'DIVIDE':([14,16,17,23,34,35,36,37,38,41,42,43,44,45,46,47,],[31,-18,-19,31,-21,31,-22,31,31,31,31,-14,-15,31,31,-20,]),'EQ':([14,16,17,23,34,35,36,37,38,41,42,43,44,45,46,47,],[32,-18,-19,32,-21,32,-22,32,32,-12,-13,-14,-15,-16,-17,-20,]),'LE':([14,16,17,23,34,35,36,37,38,41,42,43,44,45,46,47,],[33,-18,-19,33,-21,33,-22,33,33,-12,-13,-14,-15,-16,-17,-20,]),')':([16,17,34,35,36,37,38,41,42,43,44,45,46,47,],[-18,-19,-21,47,-22,48,49,-12,-13,-14,-15,-16,-17,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,3,10,],[2,11,22,]),'stmt':([0,3,10,48,49,53,],[3,3,3,50,51,55,]),'empty':([0,3,10,13,14,23,51,],[4,4,4,26,26,26,54,]),'exp':([7,12,15,18,19,20,21,28,29,30,31,32,33,],[14,23,34,35,36,37,38,41,42,43,44,45,46,]),'opt_semi':([13,14,23,],[24,27,40,]),'opt_else':([51,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_prog','cuppa1_frontend_gram.py',23),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list','cuppa1_frontend_gram.py',30),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','cuppa1_frontend_gram.py',31),
  ('stmt -> ID = exp opt_semi','stmt',4,'p_stmt','cuppa1_frontend_gram.py',41),
  ('stmt -> GET ID opt_semi','stmt',3,'p_stmt','cuppa1_frontend_gram.py',42),
  ('stmt -> PUT exp opt_semi','stmt',3,'p_stmt','cuppa1_frontend_gram.py',43),
  ('stmt -> WHILE ( exp ) stmt','stmt',5,'p_stmt','cuppa1_frontend_gram.py',44),
  ('stmt -> IF ( exp ) stmt opt_else','stmt',6,'p_stmt','cuppa1_frontend_gram.py',45),
  ('stmt -> { stmt_list }','stmt',3,'p_stmt','cuppa1_frontend_gram.py',46),
  ('opt_else -> ELSE stmt','opt_else',2,'p_opt_else','cuppa1_frontend_gram.py',68),
  ('opt_else -> empty','opt_else',1,'p_opt_else','cuppa1_frontend_gram.py',69),
  ('exp -> exp PLUS exp','exp',3,'p_binop_exp','cuppa1_frontend_gram.py',79),
  ('exp -> exp MINUS exp','exp',3,'p_binop_exp','cuppa1_frontend_gram.py',80),
  ('exp -> exp TIMES exp','exp',3,'p_binop_exp','cuppa1_frontend_gram.py',81),
  ('exp -> exp DIVIDE exp','exp',3,'p_binop_exp','cuppa1_frontend_gram.py',82),
  ('exp -> exp EQ exp','exp',3,'p_binop_exp','cuppa1_frontend_gram.py',83),
  ('exp -> exp LE exp','exp',3,'p_binop_exp','cuppa1_frontend_gram.py',84),
  ('exp -> INTEGER','exp',1,'p_integer_exp','cuppa1_frontend_gram.py',91),
  ('exp -> ID','exp',1,'p_id_exp','cuppa1_frontend_gram.py',98),
  ('exp -> ( exp )','exp',3,'p_paren_exp','cuppa1_frontend_gram.py',105),
  ('exp -> MINUS exp','exp',2,'p_uminus_exp','cuppa1_frontend_gram.py',112),
  ('exp -> NOT exp','exp',2,'p_not_exp','cuppa1_frontend_gram.py',119),
  ('opt_semi -> ;','opt_semi',1,'p_opt_semi','cuppa1_frontend_gram.py',126),
  ('opt_semi -> empty','opt_semi',1,'p_opt_semi','cuppa1_frontend_gram.py',127),
  ('empty -> <empty>','empty',0,'p_empty','cuppa1_frontend_gram.py',134),
]
